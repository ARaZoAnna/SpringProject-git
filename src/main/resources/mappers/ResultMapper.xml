<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.repository.ResultMapper">
    <select id="result" statementType="CALLABLE" parameterType="java.util.Map" >
        {CALL PROC_RESULT(#{date, mode=IN, jdbcType=VARCHAR} , #{cnt, mode=OUT, jdbcType=VARCHAR})}
    </select>


    <select id="showReport" parameterType="java.lang.String" resultType="org.example.domain.Report">
        SELECT #{month} as date, A.lc as largeCategory, A.mc as mediumCategory, A.sc as smallCategory
                , sum(A.a) as sumPurchase, sum(A.b) as sumSales, sum(A.c) as sumExpense, sum(A.profit) as profit
        FROM(
        SELECT largeCategory as lc, mediumCategory as mc, smallCategory as sc,
        sum(if(largeCategory = '매입', amount, 0)) as a,
        sum(if(largeCategory = '매출', amount, 0)) as b,
        sum(if(largeCategory = '비용', amount, 0)) as c,
        sum(if(largeCategory = '매출', amount, 0)) - sum(if(largeCategory = '매입', amount, 0)) - sum(if(largeCategory = '비용', amount, 0)) as profit
        FROM result
        WHERE substr(date,1,6) = #{month}
        GROUP BY largeCategory, mediumCategory, smallCategory
        ) A
        GROUP BY ROLLUP(A.lc, A.mc, A.sc)
        HAVING (A.lc is not null and A.mc is not null and A.sc is not null)
        or (A.lc is null and A.mc is null and A.sc is null)

    </select>

</mapper>
